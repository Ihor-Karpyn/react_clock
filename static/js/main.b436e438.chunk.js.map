{"version":3,"sources":["DisplayData.jsx","App.jsx","index.jsx"],"names":["DisplayData","data","className","map","el","App","useState","st","men","groupsNumber","setData","preparedSchedule","setPreparedSchedule","inputsHandler","e","target","name","value","title","onChange","prepareText","type","onClick","length","array","preparedStudents","sort","Math","random","preparedMentors","schedule","Array","fill","group","index","groupIndex","i","push","join","style","width","height","str","split","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAaeA,EATK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,qBAAKC,UAAU,iBAAf,SAEGD,EAAKE,KAAI,SAAAC,GAAE,OACV,qBAAKF,UAAU,cAAf,SAAuCE,GAALA,SCJ3BC,EAAM,WACjB,MAAwBC,mBAAS,CAC/BC,GAAI,GACJC,IAAK,GACLC,aAAc,IAHhB,mBAAOR,EAAP,KAAaS,EAAb,KAKA,EAAgDJ,mBAAS,IAAzD,mBAAOK,EAAP,KAAyBC,EAAzB,KAqCMC,EAAgB,SAACC,GACrB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdP,EAAQ,2BACHT,GADE,kBAEJe,EAAgB,iBAATA,GAA2BC,EAAQA,MAI/C,OACE,gCACE,2BAAUC,MAAM,WAAhB,UACE,8CACA,sBAAKhB,UAAU,iBAAf,UACE,0BACEe,MAAOhB,EAAKM,GACZS,KAAK,KACLG,SAAUN,IAEZ,cAAC,EAAD,CAAaZ,KAAMA,EAAKM,GAAKa,EAAYnB,EAAKM,IAAM,WAGxD,2BAAUW,MAAM,UAAhB,UACE,6CACA,sBAAKhB,UAAU,iBAAf,UACE,0BACEc,KAAK,MACLC,MAAOhB,EAAKO,IACZW,SAAUN,IAEZ,cAAC,EAAD,CAAaZ,KAAMA,EAAKO,IAAMY,EAAYnB,EAAKO,KAAO,WAG1D,2BAAUU,MAAM,mBAAhB,UACE,sDACA,uBACEG,KAAK,SACLL,KAAK,eACLC,MAAOhB,EAAKQ,aACZU,SAAUN,OAGd,wBACEQ,KAAK,SACLC,QA/EW,WACf,IAAQf,EAA0BN,EAA1BM,GAAIC,EAAsBP,EAAtBO,IAAKC,EAAiBR,EAAjBQ,aAEjB,GAAkB,IAAdF,EAAGgB,QAA+B,IAAff,EAAIe,QAAgBd,GAAgB,EACzD,OAAO,EAOT,IAJA,IAmGae,EAnGPC,GAmGOD,EAnGoBJ,EAAYb,GAoGxC,YAAIiB,GAAOE,MAAK,kBAAMC,KAAKC,SAAW,OAnGvCC,EAAkBT,EAAYZ,GAC9BsB,EAAW,IAAIC,MAAMtB,GAAcuB,KAAK,IAErCH,EAAgBN,OAASE,EAAiBF,QAC/CM,EAAe,sBAAOA,GAAP,YAA2BA,IAG5CC,EAAWA,EAAS3B,KAAI,SAAC8B,EAAOC,GAAR,MACtB,CAAC,2DAAD,OAAoBL,EAAgBK,GAApC,WAKF,IAFA,IAAIC,EAAa,EAERC,EAAI,EAAGA,EAAIX,EAAiBF,OAAQa,GAAK,EAC5CD,GAAcL,EAASP,SACzBY,EAAa,GAGfL,EAASK,GAAYE,KAAKZ,EAAiBW,IAC3CD,GAAc,EAKhB,OAFAvB,EAAoBkB,EAAS3B,KAAI,SAAAC,GAAE,mBAAUA,EAAGkC,KAAK,WAE9C,GAgDHpC,UAAU,MAHZ,sBAOA,qCACE,8CACA,0BACEqC,MAAO,CACLC,MAAO,OACPC,OAAQ,SAEVxB,MAAON,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAoBE,EAAEC,OAAOE,iBAQtD,SAASG,EAAYsB,GACnB,OAAOA,EAAIC,MAAM,MACdC,QAAO,SAAAxC,GAAE,OAAkB,IAAdA,EAAGmB,UAChBpB,KAAI,SAAAC,GAAE,iBAAQA,EAAGuC,MAAM,KAAKL,KAAK,QC9GtCO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b436e438.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\n// eslint-disable-next-line react/prop-types\nconst DisplayData = ({ data }) => (\n  <div className=\"displayWrapper\">\n    {/* eslint-disable-next-line react/prop-types */}\n    {data.map(el => (\n      <div className=\"displayData\" key={el}>{el}</div>\n    ))}\n  </div>\n);\n\nexport default DisplayData;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport DisplayData from './DisplayData';\n\nexport const App = () => {\n  const [data, setData] = useState({\n    st: '',\n    men: '',\n    groupsNumber: 0,\n  });\n  const [preparedSchedule, setPreparedSchedule] = useState('');\n\n  const generate = () => {\n    const { st, men, groupsNumber } = data;\n\n    if (st.length === 0 || men.length === 0 || groupsNumber <= 1) {\n      return 0;\n    }\n\n    const preparedStudents = shuffle(prepareText(st));\n    let preparedMentors = prepareText(men);\n    let schedule = new Array(groupsNumber).fill([]);\n\n    while (preparedMentors.length < preparedStudents.length) {\n      preparedMentors = [...preparedMentors, ...preparedMentors];\n    }\n\n    schedule = schedule.map((group, index) => (\n      [`\\nО :00 проведе ${preparedMentors[index]} \\n`]\n    ));\n\n    let groupIndex = 0;\n\n    for (let i = 0; i < preparedStudents.length; i += 1) {\n      if (groupIndex >= schedule.length) {\n        groupIndex = 0;\n      }\n\n      schedule[groupIndex].push(preparedStudents[i]);\n      groupIndex += 1;\n    }\n\n    setPreparedSchedule(schedule.map(el => `\\n ${el.join('\\n')}`));\n\n    return 0;\n  };\n\n  const inputsHandler = (e) => {\n    const { name, value } = e.target;\n\n    setData({\n      ...data,\n      [name]: name === 'groupsNumber' ? +value : value,\n    });\n  };\n\n  return (\n    <div>\n      <fieldset title=\"students\">\n        <legend>students</legend>\n        <div className=\"fields_wrapper\">\n          <textarea\n            value={data.st}\n            name=\"st\"\n            onChange={inputsHandler}\n          />\n          <DisplayData data={data.st ? prepareText(data.st) : []} />\n        </div>\n      </fieldset>\n      <fieldset title=\"mentors\">\n        <legend>mentors</legend>\n        <div className=\"fields_wrapper\">\n          <textarea\n            name=\"men\"\n            value={data.men}\n            onChange={inputsHandler}\n          />\n          <DisplayData data={data.men ? prepareText(data.men) : []} />\n        </div>\n      </fieldset>\n      <fieldset title=\"number of groups\">\n        <legend>number of groups</legend>\n        <input\n          type=\"number\"\n          name=\"groupsNumber\"\n          value={data.groupsNumber}\n          onChange={inputsHandler}\n        />\n      </fieldset>\n      <button\n        type=\"button\"\n        onClick={generate}\n        className=\"btn\"\n      >\n        generate\n      </button>\n      <fieldset>\n        <legend>Schedule</legend>\n        <textarea\n          style={{\n            width: '100%',\n            height: '100vh',\n          }}\n          value={preparedSchedule}\n          onChange={e => setPreparedSchedule(e.target.value)}\n          // readOnly\n        />\n      </fieldset>\n    </div>\n  );\n};\n\nfunction prepareText(str) {\n  return str.split('\\n')\n    .filter(el => el.length !== 0)\n    .map(el => `@${el.split(' ').join('')}`);\n}\n\nfunction shuffle(array) {\n  return [...array].sort(() => Math.random() - 0.5);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}